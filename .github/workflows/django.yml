name: Django CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  DEBUG: False
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ALLOWED_HOSTS: '*'
  ADMINS: '"Dean" <lynchdean@gmail.com>'
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: 587
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  EMAIL_USE_TLS: True
  DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_HOST }}
        ports: [ '5433:5433' ]
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [ 3.12 ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Migrations
        run: |
          python manage.py migrate
      - name: Run Tests
        run: |
          python manage.py test
      - name: Coverage report
        run: |
          coverage run --source='.' manage.py test 
          coverage report
